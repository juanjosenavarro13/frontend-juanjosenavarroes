name: Run Lint, Format, and Test

on:
  push:
    branches: ["main", "feat/**"]
  pull_request:
    branches:
      - main

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8.15.5

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Restore dependencies from cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies if cache not found
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: pnpm install

  format-lint:
    name: Format & Lint
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Format
        run: pnpm format:check

      - name: Linter
        run: pnpm lint:check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run unit tests
        run: pnpm test:coverage
